[project]
authors = [
    {name = "Yuval Levi", email = "yuvall9313@gmail.com"},
    {name = "David Montague", email = "davwmont@gmail.com"},
]
license = {text = "MIT"}
requires-python = "<4.0,>=3.8"
dependencies = [
    "fastapi<1.0,>=0.89",
    "pydantic<3.0,>1.0",
    "psutil<6,>=5",
]
name = "fastapi-utils"
version = "0.8.0"
description = "Reusable utilities for FastAPI"
readme = "README.md"
keywords = [
    "fastapi",
    "OOP",
    "RESTful",
]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Utilities",
]

[project.urls]
homepage = "https://fastapiutils.github.io/fastapi-utils/"
repository = "https://github.com/dmontagu/fastapi-utils"
documentation = "https://fastapiutils.github.io/fastapi-utils/"

[dependency-groups]
dev = [
    # Starlette features
    "aiofiles",  # Serving static files
    "httpx",     # Test client
    
    # Testing
    "pytest<8.0,>=7.0",
    "pytest-cov",
    "pytest-asyncio<1.0.0,>=0.21.1; python_version < \"3.10\" and python_version >= \"3.8\"",
    "pytest-asyncio; python_version >= \"3.10\"",
    "coverage",
    "codecov<3.0.0,>=2.1.13",
    "pytest-timeout<3.0.0,>=2.3.1",
    "sqlalchemy<3.0,>=1.4",

    # Static
    "autoflake<2.0,>=1.4",
    "ruff>0.3",
    "black",
    "mypy",
    "sqlalchemy-stubs",
]
docs = [
    # Docs
    "mkdocs",
    "mkdocs-material",
    "markdown-include",
]

[project.optional-dependencies]
all = [
    "sqlalchemy<3.0,>=1.4",
    "pydantic-settings<3.0.0,>=2.0.1",
    "typing-inspect<1.0.0,>=0.9.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 120
target_version = ['py39']
include = '\.pyi?$'
exclude = '''
(
  /(
    \.git
    | \.mypy_cache
    | \.pytest_cache
    | htmlcov
    | build
  )/
)
'''

[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = ['RUF100', 'C90', 'I']
isort = { known-first-party = ['FastApi-RESTful', 'tests'] }

[tool.coverage.run]
source = ["fastapi_utils"]
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "raise NotImplemented",
    "@overload",
    "if TYPE_CHECKING:",
    'if __name__ == "__main__":'
]

[tool.pytest.ini_options]
testpaths = "tests"
filterwarnings = "ignore:.*The explicit passing of coroutine objects to asyncio.wait()*:DeprecationWarning"

[tool.mypy]
plugins = "pydantic.mypy,sqlmypy"

follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
ignore_missing_imports = true
disallow_untyped_defs = true
